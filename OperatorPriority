.data
  Phrase: .asciiz  "\n t1 * t2 * t3 - t1 +t2 * t4 /(t1+t2+t3+t4) = "

.text
  main:
    addi $t1 , $zero , 5
    addi $t2 , $zero , 7
    addi $t3 , $zero , 2
    addi $t4 , $zero , 12
    
    # $t5 = $t1 * $t2
    move $a1 , $t1
    move $a2 , $t2
    jal multnumbers
    addi $t5 , $v1 , 0
    
    # $t5 = $t5 *$t3
    move $a1 , $t5
    move $a2 , $t3
    jal multnumbers
    addi $t5 , $v1 , 0
        
    # $t5 = $t5 - $t1
    move $a1 , $t5
    move $a2 , $t1
    jal subnumbers
    addi $t5 , $v1 , 0
    mtc1.d $t5, $f0
    cvt.d.w $f0, $f0
    
    # $t7 = $t2 * $t4 
    move $a1 , $t2
    move $a2 , $t4
    jal multnumbers
    addi $t7 , $v1 , 0
    mtc1.d $t7, $f2
    cvt.d.w $f2, $f2

    
    # $t6 = $t1 + $t2 + $t3 + $t4
    add $t6 , $t1 , $t2
    add $t6 , $t3 , $t6
    add $t6 , $t6 , $t4
    mtc1.d $t6, $f4
    cvt.d.w $f4, $f4
    
    # $t7 = $t7 / $t6
    div.d $f4, $f2, $f4
    
    # t1 * t2 * t3 - t1 +t2 * t4 /(t1+t2+t3+t4)
    li $v0 , 4
    la $a0 , Phrase
    syscall
    
    
    # t1 * t2 * t3 - t1 +t2 * t4 /(t1+t2+t3+t4) = 5
    add.d $f4 , $f0 , $f4
    li $v0 , 3
    mov.d  $f12 , $f4
    syscall
      

  exit:
    # End of programm
    li $v0 , 10
    syscall
    
  subnumbers:
    sub $v1 , $a1 , $a2
    jr $ra  
    
      
  multnumbers:
    mul $v1 , $a1 , $a2
    jr $ra  
      
  divnumbers:
    div $v1 , $a1 , $a2
    jr $ra